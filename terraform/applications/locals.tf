locals {
  name = format("%s-%s", var.environment, var.domain)
}

locals {
  access_config = yamldecode(file("${var.project_path}/access.yml"))

  oauth_emails = tolist(toset(flatten([
    for group, emails in local.access_config.ingress : emails
  ])))

  oauth_access_groups = {
    for group, emails in local.access_config.ingress :
    group => join(",", emails)
  }
}

#
# Autogenerated tokens
#
resource "random_password" "argocd_server_secret" {
  length           = 20
  special          = true
  override_special = "!#$%&*()-_=+[]{}<>:?"
}

resource "random_password" "zimagi_secret_key" {
  length           = 20
  special          = true
  override_special = "!#$%&*()-_=+[]{}<>:?"
}

resource "random_password" "interface_secret_key" {
  length           = 20
  special          = true
  override_special = "!#$%&*()-_=+[]{}<>:?"
}

#
# Passwords
#
resource "random_password" "postgresql_password" {
  length  = 15
  special = false
}

resource "random_password" "redis_password" {
  length  = 15
  special = false
}

resource "random_password" "qdrant_password" {
  length  = 15
  special = false
}

#
# Application interpolation variables
#
locals {
  variables = sensitive({
    github_org = var.github_org
    # github_deployer_token = var.github_deployer_token

    argocd_server_secret  = random_password.argocd_server_secret.result
    argocd_admin_password = var.argocd_admin_password

    # container_registry        = data.digitalocean_container_registry.this.endpoint
    # container_registry_domain = data.digitalocean_container_registry.this.server_url
    # registry_credential       = digitalocean_container_registry_docker_credentials.reader.docker_credentials

    gateway_node_port = var.gateway_node_port
    certificate_key   = var.ssl_private_key
    certificate_cert  = var.ssl_certificate

    mailgun_domain      = var.mailgun_domain
    mailgun_api_key     = var.mailgun_api_key
    mailgun_webhook_key = var.mailgun_webhook_key
    from_email          = var.from_email
    contact_email       = var.contact_email

    huggingface_api_token = var.huggingface_api_token
    deepinfra_api_key     = var.deepinfra_api_key

    postgresql_password = random_password.postgresql_password.result
    redis_password      = random_password.redis_password.result
    qdrant_password     = random_password.qdrant_password.result

    zimagi_tag                 = var.zimagi_tag
    zimagi_os_password         = var.zimagi_os_password
    zimagi_secret_key          = random_password.zimagi_secret_key.result
    zimagi_admin_api_key       = var.zimagi_admin_api_key
    zimagi_email_host_user     = var.zimagi_email_host_user
    zimagi_email_host_password = var.zimagi_email_host_password

    interface_secret_key = random_password.interface_secret_key.result
    interface_api_key    = var.interface_api_key
  })
}
